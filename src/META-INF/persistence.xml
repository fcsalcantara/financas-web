<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence 
	http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0">

	<persistence-unit name="financas">
		<provider>org.hibernate.ejb.HibernatePersistence</provider>
		<jta-data-source>java:jboss/financas</jta-data-source>
		<!-- 
			Declarar classes no persistence.xml não surtiu absolutamente nenhum efeito.
			A melhor prática foi fornecer o unitName como argumento na annotation @PersistenceContext 
			dos EntityManagers injetados nos DAOs...
			Caso a aplicação possua somente uma persistence-unit, essa se torna default, tornando
			a passagem do unitName como argumento na @PersistencContext opcional, mas ainda sendo
			uma boa prática.
		 -->
		<properties>
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.format_sql" value="false" />
			<property name="hibernate.hbm2ddl.auto" value="update" />
		</properties>
	</persistence-unit>
	
	<!--
		Essa persistence-unit quando usada na ContasDao replica o BD que será criado em financas...
		Mas nesse teste houve um erro: o MovimentacaoDao busca a conta que será associada à movimentação 
		usando a persistence-unit financas (e não vai encontrar) enquanto as contas estão na persistence-unit
		testeconta (onde as contas são guardadas, e de onde são recuperadas para compor a interface).
	-->
	<!--  <persistence-unit name="testeconta">
		<provider>org.hibernate.ejb.HibernatePersistence</provider>
		<jta-data-source>java:jboss/testeconta</jta-data-source>
		<properties>
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.format_sql" value="false" />
			<property name="hibernate.hbm2ddl.auto" value="update" />
		</properties>
	</persistence-unit> -->

</persistence>
